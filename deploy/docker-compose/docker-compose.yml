version: "3.4"
services:
  glaukos:
    image: xmidt/glaukos:${GLAUKOS_VERSION}
    container_name: glaukos
    environment:
      - "CODEX_BASIC_AUTH=YXV0aEhlYWRlcjp0ZXN0"
      - "WEBHOOK_BASIC_AUTH=dXNlcjpwYXNz"
      - "WEBHOOK_REGISTRATION_INTERVAL=1m"
      - WEBHOOK_MAX_RETRY=3
      - QUEUE_SIZE=10
      - QUEUE_MAX_WORKERS=5
      - "CODEX_ADDRESS=http://gungnir:7000"
      - "LOG_LEVEL=DEBUG"
    ports:
      - 4200-4203:4200-4203
    depends_on:
      - caduceus
      - gungnir
    networks:
      - xmidt

  caduceator1:
    image: xmidt/caduceator:${CADUCEATOR_VERSION}
    container_name: caduceator-1
    ports:
      - 5010-5013:5010-5013
    depends_on:
      - caduceus
    volumes:
      - ./docFiles/caduceator-1.yaml:/etc/caduceator/caduceator.yaml
    networks:
      - xmidt

  caduceator2:
    image: xmidt/caduceator:${CADUCEATOR_VERSION}
    container_name: caduceator-2
    ports:
      - 5020-5023:5020-5023
    depends_on:
      - caduceus
    volumes:
      - ./docFiles/caduceator-2.yaml:/etc/caduceator/caduceator.yaml
    networks:
      - xmidt

  svalinn:
    image: xmidt/svalinn:${SVALINN_VERSION}
    container_name: svalinn
    restart: on-failure
    ports:
      - 7100-7103:7100-7103
    depends_on:
      - caduceus
      - yb-tserver
    volumes:
      - ./docFiles/svalinn.yaml:/etc/svalinn/svalinn.yaml
      - ./docFiles/public.pem:/etc/svalinn/public.pem
    networks:
      - xmidt

  gungnir:
    image: xmidt/gungnir:${GUNGNIR_VERSION}
    container_name: gungnir
    restart: on-failure
    ports:
      - 7000-7003:7000-7003
    depends_on:
      - caduceus
      - yb-tserver
    volumes:
      - ./docFiles/gungnir.yaml:/etc/gungnir/gungnir.yaml
      - ./docFiles/private.pem:/etc/gungnir/private.pem
    networks:
      - xmidt

  caduceus:
    image: xmidt/caduceus:${CADUCEUS_VERSION}
    container_name: caduceus
    environment:
      - ARGUS_HOST=http://argus:6600
    ports:
      - 6000-6003:6000-6003
    depends_on:
      - argus
    networks:
      - xmidt

  argus:
    image: xmidt/argus:${ARGUS_VERSION}
    container_name: argus
    environment:
      - "AWS_ENDPOINT=http://dynamodb:8000"
      - "LOG_LEVEL=DEBUG"
    ports:
      - 6600-6603:6600-6603
    depends_on:
      - dynamodb
    networks:
      - xmidt

  dynamodb:
    image: amazon/dynamodb-local
    hostname: dynamodb
    ports:
      - 8000:8000
    networks:
      - xmidt

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    networks:
      - xmidt
    ports:
      - 9090:9090
    volumes:
      - ./docFiles/prometheus.yml:/prometheus-data/prometheus.yml
    command: --log.level=debug --config.file=/prometheus-data/prometheus.yml

  yb-manager:
    image: yugabytedb/yugabyte:latest
    container_name: yb-manager-n1
    command:
      [
        "/home/yugabyte/bin/yb-master",
        "--fs_data_dirs=/mnt/disk0,/mnt/disk1",
        "--master_addresses=yb-manager-n1:7100",
        "--replication_factor=1",
      ]
    networks:
      - xmidt
    ports:
      - "7111:7000"
    environment:
      SERVICE_7000_NAME: yb-manager
  yb-tserver:
    image: yugabytedb/yugabyte:latest
    container_name: yb-tserver-n1
    volumes:
      - ./docFiles/create_db.cql:/create_db.cql
    command:
      [
        "/home/yugabyte/bin/yb-tserver",
        "--fs_data_dirs=/mnt/disk0,/mnt/disk1",
        "--tserver_master_addrs=yb-manager-n1:7100",
      ]
    networks:
      - xmidt
    ports:
      - "9042:9042"
      - "6379:6379"
      - "5433:5433"
      - "9000:9000"
    environment:
      SERVICE_5433_NAME: ysql
      SERVICE_9042_NAME: ycql
      SERVICE_6379_NAME: yedis
      SERVICE_9000_NAME: yb-tserver
    depends_on:
      - yb-manager
networks:
  xmidt:
